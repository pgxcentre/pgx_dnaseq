# pgx_dnaseq - Automatic NGS pipeline

*Version 0.5*

`pgx_dnaseq` is an automatic pipeline to perform high-throughput sequencing
analysis.


## Dependencies

The tool requires a standard [Python](http://python.org/) installation (>=3.4)
with the following modules:

1. [numpy](http://www.numpy.org/) version 1.8.1 or latest
2. [pandas](http://pandas.pydata.org/) version 0.13.1 or latest
3. [ruffus](http://www.ruffus.org.uk/) updated for Python 3 (version 2.4.1 or
   latest and available [here](https://bitbucket.org/PGx_DNA_Seq/pgx_dna_seq/downloads))
4. [matplotlib](http://matplotlib.org/) version 1.3.1 or latest

The tool has been tested on *Linux* only, but should work on *MacOS* operating
systems as well.


## Installation

First, create a directory where the *Python virtual envirnoment* will be
installed.

```console
$ mkdir -p ~/softwares/Python-3_virtualenv
$ pyvenv ~/softwares/Python-3_virtualenv
```

Then, activate the newly created virtual environment:

```console
$ source ~/softwares/Python-3_virtualenv/bin/activate
```

Before installing the pipeline, install [numpy](http://www.numpy.org/) and our
own version of
[ruffus](https://bitbucket.org/PGx_DNA_Seq/pgx_dnaseq/downloads):

```console
$ pip install -U numpy
$ pip install -U ruffus-2.5-py3.4.1.tar.gz
```

Finally, install the pipeline (it will install all the remaining requirements):

```console
$ pip install -U pgx_dnaseq-0.5.tar.gz
```

## Usage

For Linux users, make sure that the script is executable (using the *chmod*
command).

```console
$ execute_pipeline.py --help
usage: execute_pipeline.py [-h] [-v] [-i FILE] [-p FILE] [-t FILE] [-d]
                           [-n INT] [-f FORMAT]

Execute a NGS pipeline (version 0.5).

optional arguments:
  -h, --help            show this help message and exit
  -v, --version         show program's version number and exit

Pipeline Configuration:
  -i FILE, --input FILE
                        A file containing the pipeline input files (one sample
                        per line, one or more file per sample
                        [input_files.txt]
  -p FILE, --pipeline-config FILE
                        The pipeline configuration file [pipeline.conf]
  -t FILE, --tool-config FILE
                        The tools configuration file [tools.conf]
  -d, --use-drmaa       Use DRMAA to launch the tasks instead of running them
                        locally [False]
  -n INT, --nb-process INT
                        The number of processes for job execution (allow
                        enough if '--use-drmaa' option is used since you want
                        at least one job per sample) [1]

Pipeline Flowchart:
  -f FORMAT, --format FORMAT
                        The format of the pipeline flowchart [pdf]
```
